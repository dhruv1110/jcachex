apiVersion: apps/v1
kind: Deployment
metadata:
  name: jcachex-app
  namespace: jcachex-demo
  labels:
    app: jcachex
    component: distributed-cache
spec:
  replicas: 3
  selector:
    matchLabels:
      app: jcachex
      component: distributed-cache
  template:
    metadata:
      labels:
        app: jcachex
        component: distributed-cache
    spec:
      serviceAccountName: jcachex-service-account
      containers:
      - name: jcachex-app
        image: jcachex-k8s-example:latest
        imagePullPolicy: Never  # Use local image built by Docker Compose
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: cache-port
        env:
        - name: SIMULATION_MODE
          value: "false"
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_SERVICE_NAME
          value: "jcachex-service"
        - name: K8S_LABEL_SELECTOR
          value: "app=jcachex,component=distributed-cache"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JAVA_OPTS
          value: "-Xmx512m -Xms256m"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: cache-storage
          mountPath: /app/cache
      volumes:
      - name: cache-storage
        emptyDir: {}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
