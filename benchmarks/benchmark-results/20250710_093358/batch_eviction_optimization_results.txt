# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.caffeineBulkPut

# Run progress: 0.00% complete, ETA 00:07:28
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.421 us/op
# Warmup Iteration   2: 0.390 us/op
# Warmup Iteration   3: 0.390 us/op
Iteration   1: 0.387 us/op
Iteration   2: 0.390 us/op
Iteration   3: 0.389 us/op
Iteration   4: 0.392 us/op
Iteration   5: 0.388 us/op

# Run progress: 3.57% complete, ETA 00:07:18
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.415 us/op
# Warmup Iteration   2: 0.389 us/op
# Warmup Iteration   3: 0.389 us/op
Iteration   1: 0.391 us/op
Iteration   2: 0.418 us/op
Iteration   3: 0.395 us/op
Iteration   4: 0.390 us/op
Iteration   5: 0.389 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.caffeineBulkPut":
  0.393 ±(99.9%) 0.014 us/op [Average]
  (min, avg, max) = (0.387, 0.393, 0.418), stdev = 0.009
  CI (99.9%): [0.379, 0.407] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.caffeineGet

# Run progress: 7.14% complete, ETA 00:07:02
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.014 us/op
# Warmup Iteration   2: 0.015 us/op
# Warmup Iteration   3: 0.014 us/op
Iteration   1: 0.014 us/op
Iteration   2: 0.014 us/op
Iteration   3: 0.014 us/op
Iteration   4: 0.014 us/op
Iteration   5: 0.014 us/op

# Run progress: 10.71% complete, ETA 00:06:46
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.015 us/op
# Warmup Iteration   2: 0.013 us/op
# Warmup Iteration   3: 0.013 us/op
Iteration   1: 0.014 us/op
Iteration   2: 0.013 us/op
Iteration   3: 0.013 us/op
Iteration   4: 0.013 us/op
Iteration   5: 0.013 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.caffeineGet":
  0.014 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.013, 0.015] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.caffeinePut

# Run progress: 14.29% complete, ETA 00:06:29
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.022 us/op
# Warmup Iteration   2: 0.022 us/op
# Warmup Iteration   3: 0.021 us/op
Iteration   1: 0.021 us/op
Iteration   2: 0.021 us/op
Iteration   3: 0.021 us/op
Iteration   4: 0.021 us/op
Iteration   5: 0.021 us/op

# Run progress: 17.86% complete, ETA 00:06:13
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.022 us/op
# Warmup Iteration   2: 0.022 us/op
# Warmup Iteration   3: 0.022 us/op
Iteration   1: 0.021 us/op
Iteration   2: 0.021 us/op
Iteration   3: 0.021 us/op
Iteration   4: 0.021 us/op
Iteration   5: 0.021 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.caffeinePut":
  0.021 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
  CI (99.9%): [0.021, 0.021] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.concurrentMapGet

# Run progress: 21.43% complete, ETA 00:05:57
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.004 us/op
# Warmup Iteration   2: 0.004 us/op
# Warmup Iteration   3: 0.004 us/op
Iteration   1: 0.004 us/op
Iteration   2: 0.004 us/op
Iteration   3: 0.004 us/op
Iteration   4: 0.004 us/op
Iteration   5: 0.004 us/op

# Run progress: 25.00% complete, ETA 00:05:41
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.004 us/op
# Warmup Iteration   2: 0.004 us/op
# Warmup Iteration   3: 0.004 us/op
Iteration   1: 0.004 us/op
Iteration   2: 0.004 us/op
Iteration   3: 0.004 us/op
Iteration   4: 0.004 us/op
Iteration   5: 0.004 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.concurrentMapGet":
  0.004 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.concurrentMapPut

# Run progress: 28.57% complete, ETA 00:05:24
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.009 us/op
# Warmup Iteration   2: 0.010 us/op
# Warmup Iteration   3: 0.009 us/op
Iteration   1: 0.009 us/op
Iteration   2: 0.009 us/op
Iteration   3: 0.009 us/op
Iteration   4: 0.009 us/op
Iteration   5: 0.009 us/op

# Run progress: 32.14% complete, ETA 00:05:08
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.009 us/op
# Warmup Iteration   2: 0.010 us/op
# Warmup Iteration   3: 0.010 us/op
Iteration   1: 0.009 us/op
Iteration   2: 0.009 us/op
Iteration   3: 0.009 us/op
Iteration   4: 0.009 us/op
Iteration   5: 0.009 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.concurrentMapPut":
  0.009 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.009, 0.009, 0.009), stdev = 0.001
  CI (99.9%): [0.009, 0.009] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionAggressiveBulkPut

# Run progress: 35.71% complete, ETA 00:04:52
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
1.761 us/op
# Warmup Iteration   2: 1.656 us/op
# Warmup Iteration   3: 1.622 us/op
Iteration   1: 1.619 us/op
Iteration   2: 1.630 us/op
Iteration   3: 1.634 us/op
Iteration   4: 1.637 us/op
Iteration   5: 1.628 us/op

# Run progress: 39.29% complete, ETA 00:04:36
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
1.764 us/op
# Warmup Iteration   2: 1.628 us/op
# Warmup Iteration   3: 1.606 us/op
Iteration   1: 1.610 us/op
Iteration   2: 1.614 us/op
Iteration   3: 1.614 us/op
Iteration   4: 1.618 us/op
Iteration   5: 1.615 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionAggressiveBulkPut":
  1.622 ±(99.9%) 0.014 us/op [Average]
  (min, avg, max) = (1.610, 1.622, 1.637), stdev = 0.009
  CI (99.9%): [1.608, 1.636] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionAggressiveGet

# Run progress: 42.86% complete, ETA 00:04:19
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.098 us/op
# Warmup Iteration   2: 0.093 us/op
# Warmup Iteration   3: 0.091 us/op
Iteration   1: 0.090 us/op
Iteration   2: 0.089 us/op
Iteration   3: 0.089 us/op
Iteration   4: 0.089 us/op
Iteration   5: 0.090 us/op

# Run progress: 46.43% complete, ETA 00:04:03
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.091 us/op
# Warmup Iteration   2: 0.089 us/op
# Warmup Iteration   3: 0.088 us/op
Iteration   1: 0.087 us/op
Iteration   2: 0.087 us/op
Iteration   3: 0.087 us/op
Iteration   4: 0.086 us/op
Iteration   5: 0.087 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionAggressiveGet":
  0.088 ±(99.9%) 0.002 us/op [Average]
  (min, avg, max) = (0.086, 0.088, 0.090), stdev = 0.001
  CI (99.9%): [0.086, 0.090] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionAggressivePut

# Run progress: 50.00% complete, ETA 00:03:47
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.165 us/op
# Warmup Iteration   2: 0.156 us/op
# Warmup Iteration   3: 0.154 us/op
Iteration   1: 0.154 us/op
Iteration   2: 0.154 us/op
Iteration   3: 0.154 us/op
Iteration   4: 0.154 us/op
Iteration   5: 0.154 us/op

# Run progress: 53.57% complete, ETA 00:03:31
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.164 us/op
# Warmup Iteration   2: 0.157 us/op
# Warmup Iteration   3: 0.154 us/op
Iteration   1: 0.154 us/op
Iteration   2: 0.153 us/op
Iteration   3: 0.154 us/op
Iteration   4: 0.154 us/op
Iteration   5: 0.154 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionAggressivePut":
  0.154 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.153, 0.154, 0.154), stdev = 0.001
  CI (99.9%): [0.153, 0.154] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionBulkPut

# Run progress: 57.14% complete, ETA 00:03:14
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
1.784 us/op
# Warmup Iteration   2: 1.646 us/op
# Warmup Iteration   3: 1.631 us/op
Iteration   1: 1.634 us/op
Iteration   2: 1.633 us/op
Iteration   3: 1.634 us/op
Iteration   4: 1.632 us/op
Iteration   5: 1.632 us/op

# Run progress: 60.71% complete, ETA 00:02:58
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
1.778 us/op
# Warmup Iteration   2: 1.647 us/op
# Warmup Iteration   3: 1.633 us/op
Iteration   1: 1.630 us/op
Iteration   2: 1.632 us/op
Iteration   3: 1.630 us/op
Iteration   4: 1.631 us/op
Iteration   5: 1.631 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionBulkPut":
  1.632 ±(99.9%) 0.002 us/op [Average]
  (min, avg, max) = (1.630, 1.632, 1.634), stdev = 0.001
  CI (99.9%): [1.630, 1.634] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionGet

# Run progress: 64.29% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.096 us/op
# Warmup Iteration   2: 0.095 us/op
# Warmup Iteration   3: 0.092 us/op
Iteration   1: 0.091 us/op
Iteration   2: 0.091 us/op
Iteration   3: 0.091 us/op
Iteration   4: 0.091 us/op
Iteration   5: 0.091 us/op

# Run progress: 67.86% complete, ETA 00:02:26
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.095 us/op
# Warmup Iteration   2: 0.095 us/op
# Warmup Iteration   3: 0.093 us/op
Iteration   1: 0.092 us/op
Iteration   2: 0.092 us/op
Iteration   3: 0.092 us/op
Iteration   4: 0.093 us/op
Iteration   5: 0.092 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionGet":
  0.092 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.091, 0.092, 0.093), stdev = 0.001
  CI (99.9%): [0.091, 0.093] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionPut

# Run progress: 71.43% complete, ETA 00:02:09
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.167 us/op
# Warmup Iteration   2: 0.157 us/op
# Warmup Iteration   3: 0.155 us/op
Iteration   1: 0.155 us/op
Iteration   2: 0.155 us/op
Iteration   3: 0.155 us/op
Iteration   4: 0.155 us/op
Iteration   5: 0.155 us/op

# Run progress: 75.00% complete, ETA 00:01:53
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.166 us/op
# Warmup Iteration   2: 0.157 us/op
# Warmup Iteration   3: 0.156 us/op
Iteration   1: 0.155 us/op
Iteration   2: 0.155 us/op
Iteration   3: 0.156 us/op
Iteration   4: 0.156 us/op
Iteration   5: 0.155 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXBatchEvictionPut":
  0.155 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.155, 0.155, 0.156), stdev = 0.001
  CI (99.9%): [0.155, 0.156] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXDefaultBulkPut

# Run progress: 78.57% complete, ETA 00:01:37
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
1.604 us/op
# Warmup Iteration   2: 1.455 us/op
# Warmup Iteration   3: 1.452 us/op
Iteration   1: 1.452 us/op
Iteration   2: 1.457 us/op
Iteration   3: 1.458 us/op
Iteration   4: 1.463 us/op
Iteration   5: 1.459 us/op

# Run progress: 82.14% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
1.611 us/op
# Warmup Iteration   2: 1.482 us/op
# Warmup Iteration   3: 1.474 us/op
Iteration   1: 1.476 us/op
Iteration   2: 1.471 us/op
Iteration   3: 1.468 us/op
Iteration   4: 1.469 us/op
Iteration   5: 1.476 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXDefaultBulkPut":
  1.465 ±(99.9%) 0.013 us/op [Average]
  (min, avg, max) = (1.452, 1.465, 1.476), stdev = 0.008
  CI (99.9%): [1.452, 1.477] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXDefaultGet

# Run progress: 85.71% complete, ETA 00:01:04
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.082 us/op
# Warmup Iteration   2: 0.080 us/op
# Warmup Iteration   3: 0.078 us/op
Iteration   1: 0.078 us/op
Iteration   2: 0.078 us/op
Iteration   3: 0.078 us/op
Iteration   4: 0.078 us/op
Iteration   5: 0.078 us/op

# Run progress: 89.29% complete, ETA 00:00:48
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.082 us/op
# Warmup Iteration   2: 0.080 us/op
# Warmup Iteration   3: 0.079 us/op
Iteration   1: 0.078 us/op
Iteration   2: 0.078 us/op
Iteration   3: 0.078 us/op
Iteration   4: 0.078 us/op
Iteration   5: 0.078 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXDefaultGet":
  0.078 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.078, 0.078, 0.078), stdev = 0.001
  CI (99.9%): [0.078, 0.078] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions -XX:+UseStringDeduplication
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 2 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXDefaultPut

# Run progress: 92.86% complete, ETA 00:00:32
# Fork: 1 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.141 us/op
# Warmup Iteration   2: 0.131 us/op
# Warmup Iteration   3: 0.131 us/op
Iteration   1: 0.130 us/op
Iteration   2: 0.132 us/op
Iteration   3: 0.131 us/op
Iteration   4: 0.131 us/op
Iteration   5: 0.131 us/op

# Run progress: 96.43% complete, ETA 00:00:16
# Fork: 2 of 2
# Warmup Iteration   1: ✓ JCacheX Default setup successful
✓ JCacheX Batch Eviction setup successful
✓ JCacheX Aggressive Batch Eviction setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.141 us/op
# Warmup Iteration   2: 0.134 us/op
# Warmup Iteration   3: 0.134 us/op
Iteration   1: 0.132 us/op
Iteration   2: 0.132 us/op
Iteration   3: 0.133 us/op
Iteration   4: 0.134 us/op
Iteration   5: 0.132 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.OptimizedBenchmark.jcacheXDefaultPut":
  0.132 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.130, 0.132, 0.134), stdev = 0.001
  CI (99.9%): [0.131, 0.133] (assumes normal distribution)


# Run complete. Total time: 00:07:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                 Mode  Cnt  Score    Error  Units
OptimizedBenchmark.caffeineBulkPut                        avgt   10  0.393 ±  0.014  us/op
OptimizedBenchmark.caffeineGet                            avgt   10  0.014 ±  0.001  us/op
OptimizedBenchmark.caffeinePut                            avgt   10  0.021 ±  0.001  us/op
OptimizedBenchmark.concurrentMapGet                       avgt   10  0.004 ±  0.001  us/op
OptimizedBenchmark.concurrentMapPut                       avgt   10  0.009 ±  0.001  us/op
OptimizedBenchmark.jcacheXBatchEvictionAggressiveBulkPut  avgt   10  1.622 ±  0.014  us/op
OptimizedBenchmark.jcacheXBatchEvictionAggressiveGet      avgt   10  0.088 ±  0.002  us/op
OptimizedBenchmark.jcacheXBatchEvictionAggressivePut      avgt   10  0.154 ±  0.001  us/op
OptimizedBenchmark.jcacheXBatchEvictionBulkPut            avgt   10  1.632 ±  0.002  us/op
OptimizedBenchmark.jcacheXBatchEvictionGet                avgt   10  0.092 ±  0.001  us/op
OptimizedBenchmark.jcacheXBatchEvictionPut                avgt   10  0.155 ±  0.001  us/op
OptimizedBenchmark.jcacheXDefaultBulkPut                  avgt   10  1.465 ±  0.013  us/op
OptimizedBenchmark.jcacheXDefaultGet                      avgt   10  0.078 ±  0.001  us/op
OptimizedBenchmark.jcacheXDefaultPut                      avgt   10  0.132 ±  0.001  us/op
