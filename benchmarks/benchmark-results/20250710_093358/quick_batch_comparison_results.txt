# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.caffeineGet

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.014 us/op
# Warmup Iteration   2: 0.014 us/op
Iteration   1: 0.014 us/op
Iteration   2: 0.014 us/op
Iteration   3: 0.014 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.caffeineGet":
  0.014 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.014, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.caffeinePut

# Run progress: 12.50% complete, ETA 00:00:36
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.022 us/op
# Warmup Iteration   2: 0.021 us/op
Iteration   1: 0.021 us/op
Iteration   2: 0.021 us/op
Iteration   3: 0.021 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.caffeinePut":
  0.021 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
  CI (99.9%): [0.019, 0.024] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.concurrentMapGet

# Run progress: 25.00% complete, ETA 00:00:31
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.004 us/op
# Warmup Iteration   2: 0.004 us/op
Iteration   1: 0.004 us/op
Iteration   2: 0.004 us/op
Iteration   3: 0.004 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.concurrentMapGet":
  0.004 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.concurrentMapPut

# Run progress: 37.50% complete, ETA 00:00:26
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.010 us/op
# Warmup Iteration   2: 0.010 us/op
Iteration   1: 0.010 us/op
Iteration   2: 0.009 us/op
Iteration   3: 0.010 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.concurrentMapPut":
  0.010 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.009, 0.010, 0.010), stdev = 0.001
  CI (99.9%): [0.009, 0.010] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXBatchGet

# Run progress: 50.00% complete, ETA 00:00:20
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.093 us/op
# Warmup Iteration   2: 0.093 us/op
Iteration   1: 0.092 us/op
Iteration   2: 0.089 us/op
Iteration   3: 0.089 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXBatchGet":
  0.090 ±(99.9%) 0.024 us/op [Average]
  (min, avg, max) = (0.089, 0.090, 0.092), stdev = 0.001
  CI (99.9%): [0.066, 0.114] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXBatchPut

# Run progress: 62.50% complete, ETA 00:00:15
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.177 us/op
# Warmup Iteration   2: 0.158 us/op
Iteration   1: 0.153 us/op
Iteration   2: 0.153 us/op
Iteration   3: 0.153 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXBatchPut":
  0.153 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.153, 0.153, 0.153), stdev = 0.001
  CI (99.9%): [0.152, 0.154] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXGet

# Run progress: 75.00% complete, ETA 00:00:10
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.079 us/op
# Warmup Iteration   2: 0.081 us/op
Iteration   1: 0.079 us/op
Iteration   2: 0.077 us/op
Iteration   3: 0.078 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXGet":
  0.078 ±(99.9%) 0.013 us/op [Average]
  (min, avg, max) = (0.077, 0.078, 0.079), stdev = 0.001
  CI (99.9%): [0.065, 0.091] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, Java HotSpot(TM) 64-Bit Server VM, 21.0.2+13-LTS-58
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-21.jdk/Contents/Home/bin/java
# VM options: -Xms2g -Xmx4g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXPut

# Run progress: 87.50% complete, ETA 00:00:05
# Fork: 1 of 1
# Warmup Iteration   1: ✓ JCacheX setup successful
✓ JCacheX Batch setup successful
✓ Caffeine setup successful
✓ ConcurrentMap setup successful
0.149 us/op
# Warmup Iteration   2: 0.134 us/op
Iteration   1: 0.130 us/op
Iteration   2: 0.130 us/op
Iteration   3: 0.131 us/op


Result "io.github.dhruv1110.jcachex.benchmarks.QuickBenchmark.jcacheXPut":
  0.130 ±(99.9%) 0.017 us/op [Average]
  (min, avg, max) = (0.130, 0.130, 0.131), stdev = 0.001
  CI (99.9%): [0.113, 0.147] (assumes normal distribution)


# Run complete. Total time: 00:00:41

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                        Mode  Cnt  Score    Error  Units
QuickBenchmark.caffeineGet       avgt    3  0.014 ±  0.001  us/op
QuickBenchmark.caffeinePut       avgt    3  0.021 ±  0.003  us/op
QuickBenchmark.concurrentMapGet  avgt    3  0.004 ±  0.001  us/op
QuickBenchmark.concurrentMapPut  avgt    3  0.010 ±  0.001  us/op
QuickBenchmark.jcacheXBatchGet   avgt    3  0.090 ±  0.024  us/op
QuickBenchmark.jcacheXBatchPut   avgt    3  0.153 ±  0.001  us/op
QuickBenchmark.jcacheXGet        avgt    3  0.078 ±  0.013  us/op
QuickBenchmark.jcacheXPut        avgt    3  0.130 ±  0.017  us/op
